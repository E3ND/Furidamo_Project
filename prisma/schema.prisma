// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String    @id @default(uuid())
  name              String 
  email             String    @unique
  password          String
  imageName         Json[]    @default([])
  likePublications  Json[]    @default([])

  createdAt         DateTime  @default(now())
  updatedAt         DateTime?  
  deletedAt         DateTime? 


  publications      Publication[]
  comments          Comment[]
  chatUsers         ChatUser[]

  messageSent Chat[] @relation("sent")
  messageReceived Chat[] @relation("received")
}

model Publication {
  id        String   @id @default(uuid())
  title     String
  text      String
  like      Json[]    @default([])
  deslike   Json[]    @default([])
  imageName Json[]    @default([])
  videoName Json[]    @default([])
  edited    Boolean

  createdAt DateTime  @default(now())
  updatedAt DateTime?  
  deletedAt DateTime? 

  comments Comment[]

  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

model Comment {
  id            String   @id @default(uuid())
  text          String
  like          Json[]    @default([])
  deslike       Json[]    @default([])
  imageName     String?
  videoName     String?
  edited        Boolean

  createdAt     DateTime  @default(now())
  updatedAt     DateTime?  
  deletedAt     DateTime? 

  puclicationId String
  publication   Publication @relation(fields: [puclicationId], references: [id])

  userId        String
  user          User     @relation(fields: [userId], references: [id])
}

model Chat {
  id String   @id @default(uuid())
  message String
  createdAt DateTime  @default(now())

  senderId String
  sender User @relation("sent", fields: [senderId], references: [id])

  recipientId String
  recipient User @relation("received", fields: [recipientId], references: [id])

  conversationId String
  conversation Conversation @relation(fields: [conversationId], references: [id])
}

model Conversation {
  id String   @id @default(uuid())

  chat Chat[]
  chatUser ChatUser[]
}

model ChatUser {
  id String   @id @default(uuid())

  userId String
  user User @relation(fields: [userId], references: [id])

  conversationId String
  conversation Conversation @relation(fields: [conversationId], references: [id])
}